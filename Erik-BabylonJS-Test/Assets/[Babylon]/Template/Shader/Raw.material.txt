module #ROOTNAMESPACE# {
    /**
    * Babylon Shader Material
    * @class #SHADERNAME#
    */
    export class #SHADERNAME# extends BABYLON.UniversalShaderMaterial {
        public constructor(name: string, scene: BABYLON.Scene) {
            super(name, scene, null);
            this.enableTime = false;
        }
        public getShaderName(): string {
            return "#SHADERFILE#";
        }
        public getAlphaBlending(): boolean {
            return false;
        }
        public getAlphaTesting(): boolean {
            return false;
        }
        public getDefaultDefines(): string[] {
            // IF USING A TEXTURE: return ["#define GAMETIME", "#define DELTATIME", "#define DIFFUSECOLOR", "#define DIFFUSETEXTURE"];
            return ["#define GAMETIME", "#define DELTATIME", "#define DIFFUSECOLOR"];
        }
        public getDefaultAttributes(): string[] {
            return ["position", "normal", "uv", "uv2", "color"];
        }
        public getDefaultUniforms(): string[] {
            // IF USING A TEXTURE: return ["world", "worldView", "worldViewProjection", "view", "projection", "viewProjection", "gameTime", "deltaTime", "diffuseColor", "diffuseTexture", "diffuseTextureInfos", "diffuseTextureMatrix"];
            return ["world", "worldView", "worldViewProjection", "view", "projection", "viewProjection", "gameTime", "deltaTime", "diffuseColor"];
        }

        ////////////////////////////////////////////////
        // Shader Material Life Cycle Functions       //
        ////////////////////////////////////////////////

        protected awake(): void {
            /* Init material function */
        }

        protected after(): void {
            /* After bind update function */
        }
    }
    BABYLON.RegisterClass("#ROOTNAMESPACE#.#SHADERNAME#", #SHADERNAME#);
}