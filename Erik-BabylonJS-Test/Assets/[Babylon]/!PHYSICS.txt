BabylonJS - Ammo Build
======================

Emscripten:
===========
source /users/mackey/tools/emsdk/emsdk_env.sh --build=Release


Brew Installs:
==============
brew install autoconf automake libtool


Python Symlinks
===============
Python 2: ln -s -f /usr/local/bin/python2.7 /usr/local/bin/python
Python 3: ln -s -f /usr/local/bin/python3.9 /usr/local/bin/python


Autogen Bullet:
===============
From Bullet Folder: ./autogen.sh


Building Lib:
=============
In order to build ammo.js yourself, you will need Emscripten and cmake.

For more information about setting up Emscripten, see https://emscripten.org/docs/getting_started

To configure and build ammo into the builds directory, run the following:

cmake -B builds -DCLOSURE=1 -DTOTAL_MEMORY=67108864
cmake -B builds -DCLOSURE=1 -DTOTAL_MEMORY=134217728
cmake -B builds -DCLOSURE=1 -DTOTAL_MEMORY=268435456
cmake -B builds -DCLOSURE=1 -DTOTAL_MEMORY=536870912
cmake -B builds -DCLOSURE=1 -DTOTAL_MEMORY=1073741824
cmake -B builds -DCLOSURE=1 -DTOTAL_MEMORY=2147418112

cmake --build builds

There are also some key options that can be specified during cmake configuration, for example:

$ cmake -B builds -DCLOSURE=1                	# compile with closure
$ cmake -B builds -DALLOW_MEMORY_GROWTH=1    	# enable a resizable heap
$ cmake -B builds -DTOTAL_MEMORY=67108864		# allocate a 64MB heap (64*1024*1024)
$ cmake -B builds -DTOTAL_MEMORY=134217728   	# allocate a 128MB heap (128*1024*1024)
$ cmake -B builds -DTOTAL_MEMORY=268435456   	# allocate a 256MB heap (256*1024*1024)
$ cmake -B builds -DTOTAL_MEMORY=536870912   	# allocate a 512MB heap ((512*1024*1024)
$ cmake -B builds -DTOTAL_MEMORY=1073741824   	# allocate a 1024MB heap (1024*1024*1024)
$ cmake -B builds -DTOTAL_MEMORY=2147418112   	# allocate a 2048MB heap ((2048*1024*1024) - 65536)

On windows, you can build using cmake's mingw generator:

$ set EMSCRIPTEN=%EMSDK%/upstream/emscripten
$ cmake -B builds -G 'MinGW Makefiles'
$ cmake --build builds

Make sure they pass all automatic tests:
$ npm test